definitions:
  controller.Address:
    properties:
      City:
        type: string
      State:
        type: string
      Street:
        type: string
      Zip:
        type: string
    type: object
  controller.GetUsersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/controller.User'
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  controller.User:
    properties:
      Address:
        $ref: '#/definitions/controller.Address'
      Email:
        type: string
      ID:
        type: integer
      Name:
        type: string
      Phone:
        type: string
    type: object
  requests.CreateUserReq:
    properties:
      address:
        type: string
      email:
        type: string
      first_name:
        maxLength: 100
        minLength: 1
        type: string
      last_name:
        maxLength: 100
        minLength: 1
        type: string
      occupation:
        type: string
      password:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  responses.Response:
    properties:
      code:
        type: integer
      data: {}
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /:
    get:
      consumes:
      - application/json
      description: Get a message indicating that the Gin-Gonic server is up and running
      produces:
      - application/json
      responses:
        "200":
          description: status message
          schema:
            additionalProperties: true
            type: object
      summary: Show server running status
      tags:
      - server
  /api/v1/user:
    get:
      consumes:
      - application/json
      description: Get list of dummy users from the database
      produces:
      - application/json
      responses:
        "200":
          description: status message
          schema:
            $ref: '#/definitions/controller.GetUsersResponse'
      summary: Get list of dummy users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: An endpoint for a new user to sign-up
      parameters:
      - description: Create Users
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/requests.CreateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Sign-Up New User
      tags:
      - Users
swagger: "2.0"
